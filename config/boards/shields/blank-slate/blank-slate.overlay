#include <dt-bindings/zmk/matrix_transform.h>

/ {
    model = "Blank Slate";
    compatible = "blank-slate";

    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
        zephyr,console = &cdc_acm_uart;
        zmk,keyboard-layout = &layout_ortho_4x12_all1u;
    };

    // Transformación de la matriz (12 columnas × 4 filas)
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        rows = <4>;
        columns = <12>;
        map = <
            RC(0,0)  RC(0,1)  RC(0,2)  RC(0,3)  RC(0,4)  RC(0,5)  RC(0,6)  RC(0,7)  RC(0,8)  RC(0,9)  RC(0,10) RC(0,11)
            RC(1,0)  RC(1,1)  RC(1,2)  RC(1,3)  RC(1,4)  RC(1,5)  RC(1,6)  RC(1,7)  RC(1,8)  RC(1,9)  RC(1,10) RC(1,11)
            RC(2,0)  RC(2,1)  RC(2,2)  RC(2,3)  RC(2,4)  RC(2,5)  RC(2,6)  RC(2,7)  RC(2,8)  RC(2,9)  RC(2,10) RC(2,11)
            RC(3,0)  RC(3,1)  RC(3,2)  RC(3,3)           RC(3,5)  RC(3,6)  RC(3,7)  RC(3,8)  RC(3,9)  RC(3,10) RC(3,11)
        >;
    };

    // Layout ortogonal 4x12 con todas las teclas 1u
    layout_ortho_4x12_all1u: layout_ortho_4x12_all1u {
        compatible = "zmk,matrix-transform";
        rows = <4>;
        columns = <12>;
        map = <
            RC(0,0)  RC(0,1)  RC(0,2)  RC(0,3)  RC(0,4)  RC(0,5)  RC(0,6)  RC(0,7)  RC(0,8)  RC(0,9)  RC(0,10) RC(0,11)
            RC(1,0)  RC(1,1)  RC(1,2)  RC(1,3)  RC(1,4)  RC(1,5)  RC(1,6)  RC(1,7)  RC(1,8)  RC(1,9)  RC(1,10) RC(1,11)
            RC(2,0)  RC(2,1)  RC(2,2)  RC(2,3)  RC(2,4)  RC(2,5)  RC(2,6)  RC(2,7)  RC(2,8)  RC(2,9)  RC(2,10) RC(2,11)
            RC(3,0)  RC(3,1)  RC(3,2)  RC(3,3)           RC(3,5)  RC(3,6)  RC(3,7)  RC(3,8)  RC(3,9)  RC(3,10) RC(3,11)
        >;
    };

    // Configuración del escaneo de la matriz (pines GPIO)
    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";  // Diodos orientados de columnas a filas
        wakeup-source;               // Permite que el teclado despierte del modo de baja energía

        // Pines de filas (salidas)
        row-gpios = <
            &gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)  // F0: P0.17 ok
            &gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)  // F1: P0.20 ok
            &gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)  // F2: P0.24 ok
            &gpio1 0  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)  // F3: P1.00 ok
        >;

        // Pines de columnas (entradas) - INVERTIDOS
        col-gpios = <
            &gpio0 8 GPIO_ACTIVE_HIGH  // C0: P0.08
            &gpio1 13 GPIO_ACTIVE_HIGH  // C1: P1.13
            &gpio1 6 GPIO_ACTIVE_HIGH  // C2: P1.06
            &gpio1 4 GPIO_ACTIVE_HIGH  // C3: P1.04
            &gpio0 11 GPIO_ACTIVE_HIGH  // C4: P0.11
            &gpio0 22 GPIO_ACTIVE_HIGH  // C5: P0.22
            &gpio0 9 GPIO_ACTIVE_HIGH  // C6: P0.09
            &gpio0 10  GPIO_ACTIVE_HIGH  // C7: P0.10
            &gpio1 11 GPIO_ACTIVE_HIGH  // C8: P1.11
            &gpio1 15 GPIO_ACTIVE_HIGH  // C9: P1.15
            &gpio0 2  GPIO_ACTIVE_HIGH  // C10: P0.02
            &gpio0 29 GPIO_ACTIVE_HIGH  // C11: P0.29
        >;
    };

    // Configuración del sensor de batería (ADC en P0.31)
    vbatt: vbatt {
        compatible = "zmk,battery-voltage-divider";
        io-channels = <&adc 7>;  // ADC7 = P0.31
        output-ohms = <2000000>;     // Resistencia de 2MΩ en la placa
        full-ohms = <(2000000 + 806000)>;  // Resistencia total (2MΩ + 806kΩ)
    };
};

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 13)>,
                    <NRF_PSEL(SPIM_MOSI, 1, 1)>,
                    <NRF_PSEL(SPIM_MISO, 1, 8)>;
        };
    };
    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 13)>,
                    <NRF_PSEL(SPIM_MOSI, 1, 1)>,
                    <NRF_PSEL(SPIM_MISO, 1, 8)>;
            low-power-enable;
        };
    };
};

// Configuraciones para optimizar el uso de la batería
&adc {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&usbd {
    status = "okay";
    cdc_acm_uart: cdc_acm_uart {
        compatible = "zephyr,cdc-acm-uart";
    };
};

&flash0 {
    /*
     * Para habilitar espacio para bootloader y settings de Zephyr
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            label = "softdevice";
            reg = <0x00000000 0x00026000>;
        };
        code_partition: partition@26000 {
            label = "code_partition";
            reg = <0x00026000 0x000c6000>;
        };

        /*
         * Storage partition reservado para la configuración de ZMK
         * y las configuraciones de Bluetooth.
         */
        storage_partition: partition@ec000 {
            label = "storage";
            reg = <0x000ec000 0x00008000>;
        };

        adafruit_boot_partition: partition@f4000 {
            label = "adafruit_boot";
            reg = <0x000f4000 0x0000c000>;
        };
    };
};